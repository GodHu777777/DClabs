// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 32-bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Full Version"

// DATE "01/18/2014 21:19:50"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module fourBitCounterAsync (
	Q3,
	CP,
	Q0,
	Q1,
	Q2);
output 	Q3;
input 	CP;
output 	Q0;
output 	Q1;
output 	Q2;

// Design Ports Information
// Q3	=>  Location: PIN_L7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Q0	=>  Location: PIN_L5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Q1	=>  Location: PIN_N6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Q2	=>  Location: PIN_M6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// CP	=>  Location: PIN_J7,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Q3~output_o ;
wire \Q0~output_o ;
wire \Q1~output_o ;
wire \Q2~output_o ;
wire \CP~input_o ;
wire \CP~inputclkctrl_outclk ;
wire \D0|9~0_combout ;
wire \D0|9~q ;
wire \D1|9~0_combout ;
wire \D1|9~q ;
wire \D2|9~0_combout ;
wire \D2|9~q ;
wire \inst11~0_combout ;
wire \inst11~q ;


// Location: IOOBUF_X14_Y0_N2
cycloneiv_io_obuf \Q3~output (
	.i(\inst11~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q3~output_o ),
	.obar());
// synopsys translate_off
defparam \Q3~output .bus_hold = "false";
defparam \Q3~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X14_Y0_N9
cycloneiv_io_obuf \Q0~output (
	.i(\D0|9~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q0~output_o ),
	.obar());
// synopsys translate_off
defparam \Q0~output .bus_hold = "false";
defparam \Q0~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X12_Y0_N2
cycloneiv_io_obuf \Q1~output (
	.i(\D1|9~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q1~output_o ),
	.obar());
// synopsys translate_off
defparam \Q1~output .bus_hold = "false";
defparam \Q1~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X12_Y0_N9
cycloneiv_io_obuf \Q2~output (
	.i(\D2|9~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q2~output_o ),
	.obar());
// synopsys translate_off
defparam \Q2~output .bus_hold = "false";
defparam \Q2~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X16_Y0_N15
cycloneiv_io_ibuf \CP~input (
	.i(CP),
	.ibar(gnd),
	.o(\CP~input_o ));
// synopsys translate_off
defparam \CP~input .bus_hold = "false";
defparam \CP~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G17
cycloneiv_clkctrl \CP~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\CP~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\CP~inputclkctrl_outclk ));
// synopsys translate_off
defparam \CP~inputclkctrl .clock_type = "global clock";
defparam \CP~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X14_Y1_N6
cycloneiv_lcell_comb \D0|9~0 (
// Equation(s):
// \D0|9~0_combout  = !\D0|9~q 

	.dataa(gnd),
	.datab(gnd),
	.datac(\D0|9~q ),
	.datad(gnd),
	.cin(gnd),
	.combout(\D0|9~0_combout ),
	.cout());
// synopsys translate_off
defparam \D0|9~0 .lut_mask = 16'h0F0F;
defparam \D0|9~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X14_Y1_N7
dffeas \D0|9 (
	.clk(\CP~inputclkctrl_outclk ),
	.d(\D0|9~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\D0|9~q ),
	.prn(vcc));
// synopsys translate_off
defparam \D0|9 .is_wysiwyg = "true";
defparam \D0|9 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X14_Y1_N24
cycloneiv_lcell_comb \D1|9~0 (
// Equation(s):
// \D1|9~0_combout  = \D1|9~q  $ (\D0|9~q )

	.dataa(gnd),
	.datab(gnd),
	.datac(\D1|9~q ),
	.datad(\D0|9~q ),
	.cin(gnd),
	.combout(\D1|9~0_combout ),
	.cout());
// synopsys translate_off
defparam \D1|9~0 .lut_mask = 16'h0FF0;
defparam \D1|9~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X14_Y1_N25
dffeas \D1|9 (
	.clk(\CP~inputclkctrl_outclk ),
	.d(\D1|9~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\D1|9~q ),
	.prn(vcc));
// synopsys translate_off
defparam \D1|9 .is_wysiwyg = "true";
defparam \D1|9 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X14_Y1_N30
cycloneiv_lcell_comb \D2|9~0 (
// Equation(s):
// \D2|9~0_combout  = \D2|9~q  $ (((\D0|9~q  & \D1|9~q )))

	.dataa(\D0|9~q ),
	.datab(gnd),
	.datac(\D2|9~q ),
	.datad(\D1|9~q ),
	.cin(gnd),
	.combout(\D2|9~0_combout ),
	.cout());
// synopsys translate_off
defparam \D2|9~0 .lut_mask = 16'h5AF0;
defparam \D2|9~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X14_Y1_N31
dffeas \D2|9 (
	.clk(\CP~inputclkctrl_outclk ),
	.d(\D2|9~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\D2|9~q ),
	.prn(vcc));
// synopsys translate_off
defparam \D2|9 .is_wysiwyg = "true";
defparam \D2|9 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X14_Y1_N28
cycloneiv_lcell_comb \inst11~0 (
// Equation(s):
// \inst11~0_combout  = \inst11~q  $ (((\D2|9~q  & (\D1|9~q  & \D0|9~q ))))

	.dataa(\D2|9~q ),
	.datab(\D1|9~q ),
	.datac(\inst11~q ),
	.datad(\D0|9~q ),
	.cin(gnd),
	.combout(\inst11~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst11~0 .lut_mask = 16'h78F0;
defparam \inst11~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X14_Y1_N29
dffeas inst11(
	.clk(\CP~inputclkctrl_outclk ),
	.d(\inst11~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst11~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst11.is_wysiwyg = "true";
defparam inst11.power_up = "low";
// synopsys translate_on

assign Q3 = \Q3~output_o ;

assign Q0 = \Q0~output_o ;

assign Q1 = \Q1~output_o ;

assign Q2 = \Q2~output_o ;

endmodule
